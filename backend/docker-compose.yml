version: '3.8'

services:
  # Production service
  boneca:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PROJECT_NAME=Boneca
      - VERSION=0.1.0
      - API_PREFIX=/api/v1
    networks:
      - boneca-network
    profiles:
      - prod

  # Development service
  boneca-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    entrypoint: ["/app/src/scripts/entrypoint-dev.sh"]
    command: ["sleep", "infinity"]
    environment:
      - PROJECT_NAME=Boneca
      - VERSION=0.1.0
      - API_PREFIX=/api/v1
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    networks:
      - boneca-network
    profiles:
      - dev
    working_dir: /app

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: boneca-postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - boneca-network
    profiles:
      - dev
      - prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    name: boneca-postgres-data

networks:
  boneca-network:
    name: boneca-network
